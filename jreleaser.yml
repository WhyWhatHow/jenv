matrix:
  rows:
     - { goos: darwin,  goarch: arm64, platform: osx-aarch_64     }
     - { goos: darwin,  goarch: amd64, platform: osx-x86_64       }
     - { goos: linux,   goarch: arm64, platform: linux-aarch_64   }
     - { goos: linux,   goarch: amd64, platform: linux-x86_64     }
     - { goos: windows, goarch: arm64, platform: windows-aarch_64 }
     - { goos: windows, goarch: amd64, platform: windows-x86_64 }

project:
  name: jenv
  version: 1.0.0  #local running
#  version: "{{ env.JRELEASER_PROJECT_VERSION | default('1.2.1') }}"  # ÈªòËÆ§ÂÄºËØ≠Ê≥ï
  description: Java Environment Manager
  copyright: Copyright (c) 2025 WhyWhatHow
  authors:
    - WhyWhatHow
  license: Apache-2.0
  links:
    homepage: https://github.com/WhyWhatHow/jenv

release:
  github:
    owner: WhyWhatHow
    name: jenv
    overwrite: true
    draft: false
    discussionCategoryName: Announcements
    changelog:
      formatted: ALWAYS
      format: '- {{commitShortHash}} {{commitTitle}}'
      contributors:
        format: '- {{contributorName}}{{#contributorUsernameAsLink}} ({{.}}){{/contributorUsernameAsLink}}'
      labelers:
        - label: 'feature'
          title: 'feat:'
        - label: 'issue'
          title: 'fix:'
        - label: 'task'
          title: 'chore:'
      categories:
        - title: '‚≠êÔ∏è Features'
          labels:
            - 'feature'
        - title: '‚úÖ Issues'
          labels:
            - 'issue'
        - title: 'üõ† Tasks'
          labels:
            - 'task'
      replacers:
        - search: 'feat: '
        - search: 'fix: '
        - search: 'chore: '

hooks:
  script:
    before:
      - run: |
          echo "building ${GOOS}-${GOARCH}-${VERSION}"
          cd src 
          go mod download
          go build -ldflags "-X github.com/whywhathow/jenv/cmd.Version=${VERSION}" -o ../dist/${GOOS}-${GOARCH}/
        applyDefaultMatrix: true
        verbose: true
        environment:
          VERSION: "{{projectVersion}}"
          GOOS: "{{ matrix.goos }}"
          GOARCH: "{{ matrix.goarch }}"

assemble:
  archive:
    jenv:
      active: ALWAYS
      formats: [ ZIP ]
      applyDefaultMatrix: true
      archiveName: "jenv-{{projectVersion}}-{{ matrix.platform }}"
      fileSets:
        - input: "dist/{{ matrix.goos }}-{{ matrix.goarch }}"
          output: "bin"
          includes: [ "jenv{.exe,}" ]
        - input: "."
          includes: [ "LICENSE","README.md" ]

distributions:
  jenv:
    executable:
      windowsExtension: exe
